{
  "active": true,
  "connections": {
    "fetchTemplate": {
      "main": [
        [
          {
            "node": "Generate Buffer Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AWS S3": {
      "main": [
        [
          {
            "node": "Status Update Based On Upload",
            "type": "main",
            "index": 0
          },
          {
            "node": "AWS S31",
            "type": "main",
            "index": 0
          },
          {
            "node": "Function1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AWS S31": {
      "main": [
        [
          {
            "node": "Write Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Binary File": {
      "main": [
        [
          {
            "node": "Read Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audit Data": {
      "main": [
        [
          {
            "node": "Save Audit Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Audit Data": {
      "main": [
        [
          {
            "node": "Get Data to Process1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Data to Process": {
      "main": [
        [
          {
            "node": "Audit Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Buffer Data": {
      "main": [
        [
          {
            "node": "Data to Upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data to Upload": {
      "main": [
        [
          {
            "node": "AWS S3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Status Update Based On Upload": {
      "main": [
        [
          {
            "node": "Update Audit Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Auth Token": {
      "main": [
        [
          {
            "node": "Function11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Fetch Auth Token",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Function11": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Get Data to Process",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Data to Process1": {
      "main": [
        [
          {
            "node": "fetchTemplate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-02-01T17:34:12.319Z",
  "id": "5",
  "name": "generatePDF",
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        -1100,
        -340
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "generatepdf",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1040,
        -120
      ],
      "webhookId": "45aaab99-91fb-4561-a07e-17361a1ca825"
    },
    {
      "parameters": {
        "operation": "upload",
        "bucketName": "ga-medredtrmn-dev",
        "fileName": "={{$node[\"Webhook\"].json[\"body\"][\"file_name\"]}}",
        "binaryPropertyName": "bin",
        "additionalFields": {}
      },
      "name": "AWS S3",
      "type": "n8n-nodes-base.awsS3",
      "typeVersion": 1,
      "position": [
        -360,
        100
      ],
      "alwaysOutputData": false,
      "credentials": {
        "aws": {
          "id": "4",
          "name": "AWS account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://api-ga-medredtrmn-dev.cardinality.info/api/notificationcases/emailtemplate",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{JSON.stringify({data:[$node[\"Get Data to Process1\"].json[\"data\"]]})}}"
      },
      "name": "fetchTemplate",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -1020,
        100
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "3",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "bucketName": "ga-medredtrmn-dev",
        "fileKey": "={{$node[\"Webhook\"].json[\"body\"][\"file_name\"]}}"
      },
      "name": "AWS S31",
      "type": "n8n-nodes-base.awsS3",
      "typeVersion": 1,
      "position": [
        -860,
        340
      ],
      "credentials": {
        "aws": {
          "id": "4",
          "name": "AWS account"
        }
      }
    },
    {
      "parameters": {
        "filePath": "={{$node[\"Webhook\"].json[\"body\"][\"file_name\"]}}"
      },
      "name": "Read Binary File",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        -360,
        340
      ]
    },
    {
      "parameters": {
        "fileName": "={{$node[\"Webhook\"].json[\"body\"][\"file_name\"]}}"
      },
      "name": "Write Binary File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        -600,
        340
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://api-ga-medredtrmn-dev.cardinality.info/api/notificationcases/saveaudit",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{JSON.stringify($json)}}"
      },
      "name": "Save Audit Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        100,
        -120
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "3",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "items[0].json.status=\"IN PROGRESS\";\nitems[0].json.event_id=\"1\";\nitems[0].json.external_id= items[0].json.data.Case_id;\nitems[0].json.execution_id=$executionId;\nitems[0].json.channel= \"PRINT\";\nitems[0].json.event_process_id= items[0].json.data.event_process_id;\nconsole.log(\"execution_id \",$executionId);\nreturn items"
      },
      "name": "Audit Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -100,
        -120
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "POST",
        "url": "https://api-ga-medredtrmn-dev.cardinality.info/api/notificationcases/saveaudit",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{JSON.stringify($json)}}"
      },
      "name": "Update Audit Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        180,
        100
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "3",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "return [{json:{data:$node[\"Webhook\"].json.body}}]"
      },
      "name": "Get Data to Process",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -280,
        -120
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://api-ga-medredtrmn-dev.cardinality.info/api/pdf/generate",
        "allowUnauthorizedCerts": true,
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{JSON.stringify($node[\"fetchTemplate\"].json[\"data\"][0])}}"
      },
      "name": "Generate Buffer Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -800,
        100
      ]
    },
    {
      "parameters": {
        "functionCode": "return [{json: {}, binary: {bin: {data: items[0].json.data}}}];"
      },
      "name": "Data to Upload",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -580,
        100
      ],
      "retryOnFail": false,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "functionCode": "var id= $node[\"Save Audit Data\"].json.data[0].id\nconsole.log(\"id \",id);\nvar status;\nif($node[\"AWS S3\"].json[\"success\"] == true){\nstatus=\"SUCCESS\";\n}else{\nstatus=\"IN PROGRESS\";\n}\nconst content = {\n  output_url:\"https://s3.us-east-1.amazonaws.com\"+\"/ga-medredtrmn-dev/\"+$node[\"Webhook\"].json[\"body\"][\"filename\"],\n  input_location:$node[\"Webhook\"].json.body.input_location\n}\nreturn[{\njson:{\n\"id\":id,\n\"status\":status,\n\"content\":JSON.stringify(content)\n}\n}]"
      },
      "name": "Status Update Based On Upload",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -100,
        100
      ]
    },
    {
      "parameters": {
        "functionCode": "//var id= $node[\"Save Audit Data\"].json.data[0].id\n//console.log(\"id \",id);\nvar status;\nif($node[\"AWS S3\"].json[\"success\"] == true){\nstatus=\"SUCCESS\";\n}else{\nstatus=\"IN PROGRESS\";\n}\nconst content = {\n  output_url:\"https://s3.us-east-1.amazonaws.com\"+\"/ga-medredtrmn-dev/\"+$node[\"Webhook\"].json[\"body\"][\"filename\"],\n  input_location:$node[\"Webhook\"].json.body.input_location\n}\nconsole.log('items', $node[\"Get Data to Process\"].json)\nvar processItem = $node[\"Get Data to Process\"].json.data;\nprocessItem.status = 'SUCCESS';\nprocessItem.content= JSON.stringify(content);\nprocessItem.insertedBy = new Date();\nprocessItem.updatedBy= new Date();\nprocessItem.execution_id = $executionId;\nreturn [{json:processItem}]\n\n"
      },
      "name": "Function1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -60,
        300
      ]
    },
    {
      "parameters": {
        "requestMethod": "POST",
        "url": "https://api-ga-medredtrmn-dev.cardinality.info/api/org/auth/login",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "{\"email\":\"vimalathithan@cardinality.ai\",\"password\":\"Password@123\",\"secret\":\"\"}"
      },
      "name": "Fetch Auth Token",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -820,
        -120
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "=https://api-ga-medredtrmn-dev.cardinality.info/api/address/member-match/{{$node[\"Webhook\"].json[\"body\"][\"id\"]}}",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{JSON.stringify($json)}}"
      },
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        160,
        300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "3",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "//var id= $node[\"Save Audit Data\"].json.data[0].id\n//console.log(\"id \",id);\nvar status;\n\nstatus=\"IN PROGRESS\";\nvar processItem = $node[\"Webhook\"].json.body;\n//processItem.status = 'SUCCESS';\nprocessItem.content= '';\nprocessItem.insertedBy = new Date();\nprocessItem.updatedBy= new Date();\nprocessItem.execution_id = $executionId;\nreturn [{json:processItem}]\n\n"
      },
      "name": "Function11",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -640,
        -120
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "PATCH",
        "url": "=https://api-ga-medredtrmn-dev.cardinality.info/api/address/member-match/{{$node[\"Webhook\"].json[\"body\"][\"id\"]}}",
        "jsonParameters": true,
        "options": {},
        "bodyParametersJson": "={{JSON.stringify($json)}}"
      },
      "name": "HTTP Request1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -460,
        -120
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "3",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "\n\n$node[\"Webhook\"].json.body.payload[\"status\"] = $node[\"Webhook\"].json.body.status\n$node[\"Webhook\"].json.body.payload[\"current_date\"] = new Date().toLocaleDateString('en-US', {month: '2-digit', day: '2-digit', year: 'numeric'});\nreturn [{json:{data:$node[\"Webhook\"].json.body.payload}}]"
      },
      "name": "Get Data to Process1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -1200,
        100
      ]
    }
  ],
  "settings": {
    "errorWorkflow": "7",
    "saveExecutionProgress": true,
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [],
  "updatedAt": "2023-03-13T08:37:49.061Z"
}